name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: './api/package-lock.json'

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/discord-p4-bot:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/discord-p4-bot:${{ github.sha }}
          build-args: |
            NODE_ENV=production
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            REDIS_URL=${{ secrets.REDIS_URL }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          passphrase: ${{ secrets.VPS_PASSPHRASE }}
          port: ${{ secrets.VPS_PORT }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            # Vérifier si l'utilisateur est dans le groupe docker
            if ! groups | grep -q docker; then
              echo "L'utilisateur n'est pas dans le groupe docker. Veuillez exécuter sur le VPS :"
              echo "sudo usermod -aG docker $USER"
              echo "puis déconnectez-vous et reconnectez-vous"
              exit 1
            fi

            mkdir -p ~/discord-p4-bot
            cd ~/discord-p4-bot
            
            if [ ! -f "docker-compose.yml" ]; then
              echo "Cloning repository..."
              git clone https://github.com/${{ github.repository }} .
            else
              echo "Pulling latest changes..."
              git pull
            fi
            
            # Supprimer l'attribut version obsolète du docker-compose.yml
            sed -i '/^version:/d' docker-compose.yml
            
            # Vérifier les permissions Docker
            docker ps > /dev/null 2>&1 || { echo "Erreur: Pas de permissions Docker. Exécutez : sudo usermod -aG docker $USER"; exit 1; }
            
            docker compose pull
            docker compose up -d --force-recreate
